/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import logic.ID3;
import logic.ID3.TreeNode;

/**
 *
 * @author Daniel y Ricardo
 */
public class MainFrame extends javax.swing.JFrame {

    private ID3 id3structure;
    
    private TreeNode root;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame(String attributes_file_name, String values_file_name) {
        
                
        initComponents();
        

        
        /*
        - Se leen los ficheros
        - Se calcula el árbol
        - Se muestra por pantalla
        */
        
        try {
            id3structure = new ID3();

            if(id3structure.readData(attributes_file_name,values_file_name)){

                //Crea el arbol de decisión u lo muestra por pantalla
                id3structure.createAndPrintDecisionTree();
            }
            else{
                System.err.println("Ha ocurrido un problema al leer los ficheros " );
            }
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String attributesList = "";
        
        String[] attributesNames = id3structure.getAttributeNames();
        
        for(int i = 0; i < id3structure.getNumAttributes() - 1; i++) {
  
            attributesList += attributesNames[i];
            
            if(i != id3structure.getNumAttributes() - 2){
                attributesList += ",";
            }
        }
        
        jLabel3.setText(attributesList);     
        
        root = id3structure.getRoot();
        
        this.setVisible(true);
        
        jTextArea1.setTabSize(4);
        
        jTextArea1.append("\n");
        
        id3structure.setArea(jTextArea1);
        
        ImageIcon img = new ImageIcon("id3.gif");


        this.setIconImage(img.getImage());
        
        id3structure.printTree(root, "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ID3");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Atributos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Entrada");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("atributos");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Fichero");

        jTextField1.setEditable(false);

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Examinar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
       textoIntroducido();
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String path = f.getAbsolutePath();
        String filename = f.getName();
        jTextField1.setText(filename);
        
        //Entrada
        
        FileInputStream in = null;
        try {
            in = new FileInputStream(path);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        BufferedReader entrada = new BufferedReader(new InputStreamReader(in));
        
        
        
        //Salida
        StringTokenizer tokenizer = new StringTokenizer(filename,".");
        
        String nuevoNombre = tokenizer.nextToken() + "Solution" + ".txt";
        
        if(!tokenizer.nextToken().equals("txt")){
            new JOptionPane().showMessageDialog(null, "ERROR!! El fichero introducido debe ser un fichero .txt","ERROR", JOptionPane.ERROR_MESSAGE); 
        }
        else{
            PrintWriter salida = null;
            try {
                salida = new PrintWriter(nuevoNombre);
                
                
                String input = entrada.readLine();
                
                String resultadoTotal = "";
                
                if(input.charAt(input.length()-1)== '?'){
                    StringBuilder sb = new StringBuilder(input);
                    
                    
                        sb.deleteCharAt(input.length() - 1);
                        
                        sb.deleteCharAt(input.length() - 2);
                        sb.deleteCharAt(input.length() - 3);
                   
                    
                    input = sb.toString();
                }
                
                while(input != null){
                    
                    if(!input.equals("")){
                        
                        String respuesta = obtenerRespuesta(input);
                        
                        salida.println(input + "," + respuesta);
                        
                        resultadoTotal += input + "," + respuesta + "\n";
                        
                        input = entrada.readLine();
                        
                        if(input != null){
                            
                            if(!input.equals("")){
                                if(input.charAt(input.length()-1)== '?'){
                                    StringBuilder sb = new StringBuilder(input);


                                    sb.deleteCharAt(input.length() - 1);

                                    sb.deleteCharAt(input.length() - 2);
                                    sb.deleteCharAt(input.length() - 3);


                                    input = sb.toString();
                                }
                            }
                        }  
                    }
                    else{
                       input = entrada.readLine(); 
                    }
                }
                
                try {
                    entrada.close();
                    salida.close();
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }  
                
                new JOptionPane().showMessageDialog(null, "Se ha creado el siguiente fichero con la solución: " + nuevoNombre
                        + "\n\n" + "El contenido del fichero es el siguiente: \n\n" + resultadoTotal, "Solución", JOptionPane.INFORMATION_MESSAGE); 
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }      
        }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        textoIntroducido();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void textoIntroducido(){
         String respuesta = obtenerRespuesta(jTextField2.getText());
         
        if(respuesta != null){
           new JOptionPane().showMessageDialog(null, "Se puede Jugar: " + respuesta, "Decision", JOptionPane.INFORMATION_MESSAGE); 
           
        }
    }
    
    public String obtenerRespuesta(String entrada){
        StringTokenizer tokenizer = new StringTokenizer(entrada,",");
        
        //Leemos el número de tokens
        int numAttributes = tokenizer.countTokens();
        if (numAttributes <= 1) {
                new JOptionPane().showMessageDialog(null, "ERROR!! El texto introducido no es correcto", "ERROR", JOptionPane.ERROR_MESSAGE);
                return null;
        }
        else{
            
            String [] valoresIntroducidos = new String[numAttributes];
            
            //Cargamos los valores en el array
            for(int i = 0; i < numAttributes; i++){
                valoresIntroducidos[i] = tokenizer.nextToken();
            }
            
            //Valores de los atributos
            Vector[] domains = id3structure.getDomains();
            
            //Una estructura TreeNode auxilia
            TreeNode rootAux = root;
            
            //Resultado de la busqueda
            String result = "";
            
           
            for(int j = 0; j < numAttributes; j++)    
                for(int i = 0; i < rootAux.children.length; i++){

                    //String del valor a evaluar
                    String attributeValue = (String) domains[rootAux.decompositionAttribute].elementAt(i);

                    if(valoresIntroducidos[j].equals(attributeValue)){

                        rootAux = rootAux.children[i];
                        
                        i = 0;
                        
                        j =0;
                          
                        //si es hoja
                        if(rootAux.children == null){

                            int outputattr = 4;
                            
                            int []values = id3structure.getAllValues(rootAux.data, outputattr );
                            
                            result = (String) domains[outputattr].elementAt(values[0]);
                            
                            return result;
                        }      
                    }
                }     
        }  
        
        return null;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

}
